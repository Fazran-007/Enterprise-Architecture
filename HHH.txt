import java.sql.*;

public class Jdbc {
    public static void main(String[] args) {
        // Define database connection parameters
        String url = "jdbc:mysql://localhost:3306/mydatabase";
        String username = "root";
        String password = "";

        // Declare JDBC objects
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;

        try {
            // Step 1: Establish a connection to the database
            conn = DriverManager.getConnection(url, username, password);

            // Step 2: Create a statement object
            stmt = conn.createStatement();

            // Example CRUD operations
            // Create
            createEmployee(conn, "John", 30);
            createEmployee(conn, "Jane", 25);

            // Read
            System.out.println("Employee Data:");
            readEmployees(conn);

            // Update
            updateEmployeeAge(conn, "John", 31);

            // Delete
            deleteEmployee(conn, "Jane");

            // Read again to see changes
            System.out.println("\nUpdated Employee Data:");
            readEmployees(conn);

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // Step 3: Close resources
            try {
                if (rs != null) rs.close();
                if (stmt != null) stmt.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    // Create operation: Insert a new employee
    public static void createEmployee(Connection conn, String name, int age) {
        String query = "INSERT INTO employees (name, age) VALUES (?, ?)";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, name);
            pstmt.setInt(2, age);
            pstmt.executeUpdate();
            System.out.println("Employee " + name + " added successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Read operation: Fetch all employees
    public static void readEmployees(Connection conn) {
        String query = "SELECT * FROM employees";
        try (Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            while (rs.next()) {
                String name = rs.getString("name");
                int age = rs.getInt("age");
                System.out.println(name + " - " + age);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Update operation: Update an employee's age
    public static void updateEmployeeAge(Connection conn, String name, int newAge) {
        String query = "UPDATE employees SET age = ? WHERE name = ?";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setInt(1, newAge);
            pstmt.setString(2, name);
            int rowsAffected = pstmt.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Employee " + name + " age updated to " + newAge);
            } else {
                System.out.println("No employee found with name " + name);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Delete operation: Delete an employee by name
    public static void deleteEmployee(Connection conn, String name) {
        String query = "DELETE FROM employees WHERE name = ?";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, name);
            int rowsAffected = pstmt.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Employee " + name + " deleted successfully.");
            } else {
                System.out.println("No employee found with name " + name);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
